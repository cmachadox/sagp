Procedimento para Implantar o Sistema de Invenario SNIPE-IT

A maneira mais fácil de começar a usar o Snipe-IT no Docker é usar a imagem do Docker que enviamos ao Docker Hub :
# docker pull snipe/snipe-it

Se você preferir pegar uma versão específica do Snipe-IT, use a tag da versão que deseja usar. Por exemplo, para usar a versão 4.1.13, você usaria:
# docker pull snipe/snipe-it:v4.1.13

Variáveis ​​de ambiente do Docker
A configuração do Docker do Snipe-IT requer muitas variáveis ​​de ambiente diferentes para funcionar corretamente. Para simplificar, tentamos centralizar todas essas configurações em um arquivo de ambiente. Se você estiver usando um método que não seja o CLI docker padrão para integrar o Snipe-IT ao seu ambiente docker, será necessário passar todas as variáveis ​​mencionadas abaixo no ambiente Snipe-IT.

O Snipe-IT env-fileé um arquivo de texto simples com algumas variáveis ​​e valores que sua instalação do Snipe-IT precisa, separados por =sinais. Essas variáveis ​​de ambiente também afetarão sua configuração do MySQL.

Você pode chamar esse arquivo de qualquer coisa que quiser e colocá-lo onde quiser, apenas lembre-se de como o chamou e onde o colocou, já que precisará fazer referência a esse arquivo ao executar os contêineres do Docker, usando o --env-file=<your_docker_env_file_name>argumento. Você verá exemplos disso nos comandos mais abaixo na página ao inicializar seu contêiner do Docker.

Para os propósitos desta documentação, chamaremos nosso arquivo my_env_file.

O seu nãomy_env_file é o mesmo arquivo que o Snipe-IT usa diretamente, mas os valores que você coloca nele são usados ​​para gerar o que o Snipe-IT usa, então o que você coloca aqui é importante..env.env file

Seu my_env_filedeve ser assim:

# Mysql Parameters
MYSQL_ROOT_PASSWORD=YOUR_SUPER_SECRET_PASSWORD
MYSQL_DATABASE=snipeit
MYSQL_USER=snipeit
MYSQL_PASSWORD=YOUR_snipeit_USER_PASSWORD

# Email Parameters
# - the hostname/IP address of your mailserver
MAIL_PORT_587_TCP_ADDR=smtp.whatever.com
#the port for the mailserver (probably 587, could be another)
MAIL_PORT_587_TCP_PORT=587
# the default from address, and from name for emails
MAIL_ENV_FROM_ADDR=youremail@yourdomain.com
MAIL_ENV_FROM_NAME=Your Full Email Name
# - pick 'tls' for SMTP-over-SSL, 'tcp' for unencrypted
MAIL_ENV_ENCRYPTION=tcp
# SMTP username and password
MAIL_ENV_USERNAME=your_email_username
MAIL_ENV_PASSWORD=your_email_password

# Snipe-IT Settings
APP_ENV=production
APP_DEBUG=false
APP_KEY=<<Fill in Later!>>
APP_URL=http://127.0.0.1:YOUR_PORT_NUMBER
APP_TIMEZONE=US/Pacific
APP_LOCALE=en

Primeiro apos criar seus .env vamos iniciar a criação do container de database
# docker run --name snipe-mysql --env-file=.env --mount source=snipesql-vol,target=/var/lib/mysql -d -P mysql:5.6

Comece seu contêiner Snipe-IT
Primeiro, precisamos gerar uma chave de aplicativo. Se você já tiver um contêiner Snipe-IT em execução, anote o APP_KEY. Nas versões mais antigas do Snipe-IT, ele era armazenado em app/config/production/app.php.

Caso contrário, você pode facilmente gerar um novo, basta executar o contêiner:
# docker run --rm snipe/snipe-it

A saída deve se parecer com:
Please re-run this container with an environment variable $APP_KEY
An example APP_KEY you could use is: 
base64:D5oGA+zhFSVA3VwuoZoQ21RAcwBtJv/RGiqOcZ7BUvI=

Adicione isso APP_KEYao seu arquivo env docker (deixamos um espaço reservado para ele no seu arquivo inicial do Docker, acima). Certifique-se de incluir o base64:prefixo se for dado! Se você não estiver usando um arquivo env, será necessário passar a APP_KEYvariável de ambiente como para o contêiner docker.

Inicie o seu contêiner Snipe-IT:

Se você puxou a imagem com tag de número de versão exata do que você precisa aplicar aqui também, é claro.

Comece com a versão mais recente:

docker run -d -p YOUR_PORT_NUMBER:80 --name="snipeit" --link snipe-mysql:mysql --env-file=my_env_file --mount source=snipe-vol,dst=/var/lib/snipeit snipe/snipe-it




